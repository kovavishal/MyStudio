package com.studio.domain;
// Generated Apr 11, 2019 1:01:14 PM by Hibernate Tools 5.2.3.Final

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.springframework.util.StringUtils;

import com.studio.utils.DateUtils;

/**
 * Receipt generated by hbm2java
 */
@Entity
@Table(name = "receipt", catalog = "studio")
public class Receipt implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private long receiptId;
	private Date receiptDate;
	private int paymentId;
	private int expenseId;
	private double payAmount;
	private double balanceAmount;
	private String naration;
	private String chequeNo;
	private Date chequeDate;
	private String bankName;
	private Date createdDate;
	private Date updatedDate;
	private List<ReceiptPayment> receiptPayments = new ArrayList<ReceiptPayment>();
	private Customer customer = new Customer();
	private String strReceiptDate;
	private String strChequeDate;
	private String custName;
	private long custId;
	private Double custBalance;
	private String strPayAmount;
	private String strPaymentId;
	private String strExpenseId;
	private String preparedBy;
	private String statusPrint;
	private String payType;
	private String refType;
	private int mode;
	public Receipt() {
	}
    // new added by dina
	public Receipt(double payAmount) {
		this.payAmount = payAmount;
	}
	// end by dina
	public Receipt(Date createdDate, double payAmount) {
		this.createdDate = createdDate;
		this.payAmount = payAmount;
	}
	
	public Receipt(long receiptId, int paymentId, int expenseId, double payAmount, double balanceAmount) {
		this.receiptId = receiptId;
		this.paymentId = paymentId;
		this.expenseId = expenseId;
		this.payAmount = payAmount;
		this.balanceAmount = balanceAmount;
	}
	
	

	public Receipt(long receiptId, Date receiptDate, int paymentId, int expenseId, double payAmount,
			double balanceAmount, String naration,String preparedBy, String chequeNo, Date chequeDate, String bankName, long custId,
			Date createdDate, Date updatedDate, List<ReceiptPayment> receiptPayments) {
		
		this.receiptId = receiptId;
		this.receiptDate = receiptDate;
		this.paymentId = paymentId;
		this.expenseId = expenseId;
		this.payAmount = payAmount;
		this.balanceAmount = balanceAmount;
		this.naration = naration;
		this.chequeNo = chequeNo;
		this.chequeDate = chequeDate;
		this.bankName = bankName;
		this.custId = custId;
		this.createdDate = createdDate;
		this.updatedDate = updatedDate;
		this.receiptPayments = receiptPayments;
		this.preparedBy= preparedBy;
	}

	@Id

	@Column(name = "receipt_id", unique = true, nullable = false)
	public long getReceiptId() {
		return this.receiptId;
	}
	
	public void setReceiptId(long receiptId) {
		this.receiptId = receiptId;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "receipt_date", length = 10)
	public Date getReceiptDate() {
		return this.receiptDate;
	}

	public void setReceiptDate(Date receiptDate) {
		this.receiptDate = receiptDate;
		this.strReceiptDate = DateUtils.toDate(receiptDate,true);
	}

	@Column(name = "payment_id", nullable = false)
	public int getPaymentId() {
		return this.paymentId;
	}

	public void setPaymentId(int paymentId) {
		this.paymentId = paymentId;
	}

	@Column(name = "expense_id", nullable = false)
	public int getExpenseId() {
		return this.expenseId;
	}

	public void setExpenseId(int expenseId) {
		this.expenseId = expenseId;
	}

	@Column(name = "pay_amount", nullable = false, precision = 22, scale = 0)
	public double getPayAmount() {
		return this.payAmount;
	}

	public void setPayAmount(double payAmount) {
		this.payAmount = payAmount;
		this.strPayAmount = String.valueOf(payAmount);
	}

	@Column(name = "balance_amount", nullable = false, precision = 22, scale = 0)
	public double getBalanceAmount() {
		return this.balanceAmount;
	}

	public void setBalanceAmount(double balanceAmount) {
		this.balanceAmount = balanceAmount;
	}

	@Column(name = "naration", length = 500)
	public String getNaration() {
		return this.naration;
	}

	public void setNaration(String naration) {
		this.naration = naration;
	}

	@Column(name = "cheque_no", length = 50)
	public String getChequeNo() {
		return this.chequeNo;
	}

	public void setChequeNo(String chequeNo) {
		this.chequeNo = chequeNo;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "cheque_date", length = 10)
	public Date getChequeDate() {
		return this.chequeDate;
	}

	public void setChequeDate(Date chequeDate) {
		this.chequeDate = chequeDate;
		this.strChequeDate = DateUtils.toDate(chequeDate,true);
	}

	@Column(name = "bank_name", length = 100)
	public String getBankName() {
		return this.bankName;
	}

	public void setBankName(String bankName) {
		this.bankName = bankName;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "created_date", length = 10)
	public Date getCreatedDate() {
		return this.createdDate;
	}

	public void setCreatedDate(Date createdDate) {
		this.createdDate = createdDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "updated_date", length = 10)
	public Date getUpdatedDate() {
		return this.updatedDate;
	}

	public void setUpdatedDate(Date updatedDate) {
		this.updatedDate = updatedDate;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "receipt")
	public List<ReceiptPayment> getReceiptPayments() {
		return this.receiptPayments;
	}

	public void setReceiptPayments(List<ReceiptPayment> receiptPayments) {
		this.receiptPayments = receiptPayments;
	}

	/**
	 * @return the strReceiptDate
	 */
	@Transient
	public String getStrReceiptDate() {
		return strReceiptDate;
	}

	/**
	 * @param strReceiptDate the strReceiptDate to set
	 */
	public void setStrReceiptDate(String strReceiptDate) {
		this.strReceiptDate = strReceiptDate;
		if(strReceiptDate!=null && strReceiptDate.contains(":"))
			this.receiptDate = DateUtils.toDate(strReceiptDate);
		else if(strReceiptDate!=null)
			this.receiptDate = DateUtils.toDate(strReceiptDate,true);
		
	}

	/**
	 * @return the strChequeDate
	 */
	@Transient
	public String getStrChequeDate() {
		return strChequeDate;
	}

	/**
	 * @param strChequeDate the strChequeDate to set
	 */
	public void setStrChequeDate(String strChequeDate) {
		this.strChequeDate = strChequeDate;
		if(strChequeDate!=null && strChequeDate.contains(":"))
			this.chequeDate = DateUtils.toDate(strChequeDate);
		else if(strChequeDate!=null)
			this.chequeDate = DateUtils.toDate(strChequeDate,true);
	}

	/**
	 * @return the custName
	 */
	@Transient
	public String getCustName() {
		return custName;
	}

	/**
	 * @param custName the custName to set
	 */
	public void setCustName(String custName) {
		this.custName = custName;
	}

	/**
	 * @return the custId
	 */
	@Column(name = "cust_id", nullable = false)
	public long getCustId() {
		return this.custId;
	}

	/**
	 * @param custId the custId to set
	 */
	public void setCustId(long custId) {
		this.custId = custId;
	}
	@Transient
	public String getStatusPrint() {
		return statusPrint;
	}
	public void setStatusPrint(String statusPrint) {
		this.statusPrint = statusPrint;
	}
	/**
	 * @return the custBalance
	 */
	@Transient
	public Double getCustBalance() {
		return custBalance;
	}

	/**
	 * @param custBalance the custBalance to set
	 */
	public void setCustBalance(Double custBalance) {
		this.custBalance = custBalance;
	}

	/**
	 * @return the strPayAmount
	 */
	@Transient
	public String getStrPayAmount() {
		return strPayAmount;
	}

	/**
	 * @param strPayAmount the strPayAmount to set
	 */
	public void setStrPayAmount(String strPayAmount) {
		this.strPayAmount = strPayAmount;
		if(!StringUtils.isEmpty(strPayAmount))
			this.payAmount = Double.valueOf(strPayAmount);
	}

	/**
	 * @return the strPaymentId
	 */
	@Transient
	public String getStrPaymentId() {
		return strPaymentId;
	}

	/**
	 * @param strPaymentId the strPaymentId to set
	 */
	public void setStrPaymentId(String strPaymentId) {
		this.strPaymentId = strPaymentId;
		if(!StringUtils.isEmpty(strPaymentId))
			this.paymentId = Integer.parseInt(strPaymentId);
	}

	/**
	 * @return the strExpenseId
	 */
	@Transient
	public String getStrExpenseId() {
		return strExpenseId;
	}

	/**
	 * @param strExpenseId the strExpenseId to set
	 */
	public void setStrExpenseId(String strExpenseId) {
		this.strExpenseId = strExpenseId;
		if(!StringUtils.isEmpty(strExpenseId))
			this.expenseId = Integer.parseInt(strExpenseId);
	}
	public String getPreparedBy() {
		return preparedBy;
	}
	public void setPreparedBy(String preparedBy) {
		this.preparedBy = preparedBy;
	}
	@Transient
	public Customer getCustomer() {
		return customer;
	}
	public void setCustomer(Customer customer) {
		this.customer = customer;
	}
	@Transient
	public String getPayType() {
		return payType;
	}
	public void setPayType(String payType) {
		this.payType = payType;
	}
	@Transient
	public String getRefType() {
		return refType;
	}
	public void setRefType(String refType) {
		this.refType = refType;
	}
	@Transient
	public int getMode() {
		return mode;
	}
	public void setMode(int mode) {
		this.mode = mode;
	}
	
	
		
}
